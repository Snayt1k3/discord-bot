services:
  lavalink:
    image: ghcr.io/lavalink-devs/lavalink:4
    container_name: lavalink
    restart: unless-stopped
    environment:
      - _JAVA_OPTIONS=-Xmx4G
      - SERVER_PORT=2333
      - LAVALINK_SERVER_PASSWORD=$LAVALINK_PASS
    volumes:
      # mount application.yml from the same directory or use environment variables
      - ./application.yml:/opt/Lavalink/application.yml
      - ./plugins/:/opt/Lavalink/plugins/
    networks:
      - bot
    expose:
      - 2333
    ports:
      - "2333:2333"

  frieren:
    build: 
      context: ./bot
      dockerfile: Dockerfile
    networks:
      - bot
    depends_on:
      - lavalink
    env_file:
      - .env
    restart: always

  settings-service:
    container_name: $SETTINGS_ADDRESS
    build: 
      context: ./settings-service
    networks:
      - bot
    env_file:
      - .env
    depends_on:
      - settings-db
    restart: always

  api-gateway:
    container_name: api-gateway
    build: 
      context: ./api-gateway
    networks:
      - bot
    env_file:
      - .env
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - redis
  settings-db:
    image: postgres:latest
    restart: on-failure:5
    container_name: $SETTINGS_POSTGRES_HOST
    environment:
      POSTGRES_USER: $SETTINGS_POSTGRES_USER
      POSTGRES_PASSWORD: $SETTINGS_POSTGRES_PASSWORD
      POSTGRES_DB: $SETTINGS_POSTGRES_DB
      POSTGRES_SSLMODE: $SETTINGS_POSTGRES_SSLMODE
      POSTGRES_TIMEZONE: $SETTINGS_POSTGRES_TIMEZONE
    ports:
      - "5432:5432"
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
    networks:
      - bot

  redis:
    image: redis:latest
    container_name: $REDIS_HOST
    restart: always
    networks:
      - bot
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=$REDIS_PASS
    command: [ "redis-server", "--requirepass", "$REDIS_PASS" ]
    volumes:
      - ./data/redis_data:/data 

volumes:
  data: 
    driver: local

networks:
  bot:
    name: bot  