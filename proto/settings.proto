syntax = "proto3";

package settings;

option go_package = "proto/";


service SettingsService {
  rpc GetSettingsByGuild(GetSettingsByGuildRequest) returns (GetSettingsByGuildResponse);
  rpc GetAllGuildSettings(GetAllGuildSettingsRequest) returns (GetAllGuildSettingsResponse);
  rpc UpdateGuildSettings(UpdateGuildSettingsRequest) returns (UpdateGuildSettingsResponse);
  rpc CreateGuildSettings(CreateGuildSettingsRequest) returns (CreateGuildSettingsResponse); // Новый метод
}

// --- Модели данных ---


message RolesSettings {
  string message_id = 1;
  map<string, string> matching = 2;
}


message GuildSettings {
  string id = 1;
  string guild_id = 2;
  RolesSettings roles = 3;
}

// --- Запросы и ответы для методов ---

message GetSettingsByGuildRequest {
  string guild_id = 1;
}
message GetSettingsByGuildResponse {
  GuildSettings settings = 1;
}

message GetAllGuildSettingsRequest {}
message GetAllGuildSettingsResponse {
  repeated GuildSettings settings = 1;
}

message UpdateGuildSettingsRequest {
  string id = 1;
  RolesSettings roles = 2;
}
message UpdateGuildSettingsResponse {
  GuildSettings guild_settings = 1;
}

message CreateGuildSettingsRequest {
  string guild_id = 1;
}

message CreateGuildSettingsResponse {
  string guild_id = 1;
}
